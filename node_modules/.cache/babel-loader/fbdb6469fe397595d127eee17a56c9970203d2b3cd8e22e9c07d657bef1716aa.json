{"ast":null,"code":"var _jsxFileName = \"/Users/emilysun/AdvanceLocal/src/ResultTable/ResultTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultTable = _ref => {\n  var _data$types, _data$moves;\n  let {\n    data\n  } = _ref;\n  const formatString = string => {\n    const firstLetter = string.charAt(0);\n    const restOfWord = string.slice(1);\n    return `${firstLetter}${restOfWord}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data === null || data === void 0 ? void 0 : data.name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), (data === null || data === void 0 ? void 0 : (_data$types = data.types) === null || _data$types === void 0 ? void 0 : _data$types.length) > 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), data.types.map(type => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: type.type.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this) : null, data !== null && data !== void 0 && data.weight ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Weight:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.weight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : null, data !== null && data !== void 0 && data.base_experience ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Base Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.base_experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : null, (data === null || data === void 0 ? void 0 : (_data$moves = data.moves) === null || _data$moves === void 0 ? void 0 : _data$moves.length) > 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Moves:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: data.moves.map(move => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: move.move.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultTable;\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ResultTable","_ref","_data$types","_data$moves","data","formatString","string","firstLetter","charAt","restOfWord","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","name","toUpperCase","types","length","map","type","weight","base_experience","moves","move","_c","$RefreshReg$"],"sources":["/Users/emilysun/AdvanceLocal/src/ResultTable/ResultTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ResultTable = ({data}) => {\n\n    const formatString = (string) => {\n        const firstLetter = string.charAt(0);\n        const restOfWord = string.slice(1);\n        return `${firstLetter}${restOfWord}`\n    }\n    return (\n        <table>\n        <tr>\n          <th>Name:</th>\n          <td>{data?.name.toUpperCase()}</td>\n        </tr>\n        { data?.types?.length > 0 ? (\n          <tr>\n            <th>Type:</th>\n            {data.types.map(type => <td>{type.type.name}</td>)}\n          </tr>\n        ) : null}\n        { data?.weight ? (\n          <tr>\n            <th>Weight:</th>\n            <td>{data.weight}</td>\n          </tr> \n        ) : null}\n        { data?.base_experience ? (\n          <tr>\n          <th>Base Experience:</th>\n          <td>{data.base_experience}</td>\n          {/* <td>555 77 855</td> */}\n        </tr>\n        ) : null} \n        {data?.moves?.length > 0 ? (\n          <tr>\n            <th>Moves:</th>\n            <td>\n              <table>\n                {data.moves.map((move) => {\n                  return <tr>{move.move.name}</tr>\n                })}\n              </table>\n            </td>\n          </tr>\n        ) : null }\n        \n        </table>\n    )\n} \n\nexport default ResultTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}